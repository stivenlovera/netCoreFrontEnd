{"version":3,"file":"static/js/414.0eadc4a7.chunk.js","mappings":"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","sources":["Components/CBreadcrumbs.tsx","Services/Comisiones/Home.ts","Pages/Home/Components/CChartDias/CChartDias.tsx","Pages/Home/Components/CPremios/CPremios.tsx","Pages/Home/Components/CCardResumen/CCardResumen.tsx","Pages/Home/Components/CCardResumen/Config.tsx","Pages/Home/Components/ListCCard.tsx","Pages/Home/Components/CirculoChart/CCirculoChart.tsx","Pages/Home/Components/CNotificaciones/CNotificacion.tsx","Pages/Home/Components/CRangoActual/CRangoActual.tsx","Pages/Home/Components/MCard.tsx","Pages/Home/home.tsx"],"sourcesContent":["import React from 'react';\r\nimport { emphasize, styled } from '@mui/material/styles';\r\nimport Chip from '@mui/material/Chip';\r\nimport AccountTreeIcon from '@mui/icons-material/AccountTree';\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\r\n\r\nconst StyledBreadcrumb = styled(Chip)(({ theme }) => {\r\n  const backgroundColor =\r\n    theme.palette.mode === 'light'\r\n      ? theme.palette.grey[100]\r\n      : theme.palette.grey[800];\r\n  return {\r\n    backgroundColor,\r\n    height: theme.spacing(3),\r\n    color: theme.palette.text.primary,\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    '&:hover, &:focus': {\r\n      backgroundColor: emphasize(backgroundColor, 0.06),\r\n    },\r\n    '&:active': {\r\n      boxShadow: theme.shadows[1],\r\n      backgroundColor: emphasize(backgroundColor, 0.12),\r\n    },\r\n  };\r\n}) as typeof Chip; // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\r\n\r\nfunction handleClick(event: React.MouseEvent<Element, MouseEvent>) {\r\n  event.preventDefault();\r\n  console.info('You clicked a breadcrumb.');\r\n}\r\n\r\ninterface CBreadcrumbsProps {\r\n  icon: React.ReactElement;\r\n  nombreRoute: string;\r\n  route: string;\r\n  nombresRoutes: string[];\r\n  routes: string[];\r\n\r\n};\r\nexport const CBreadcrumbs = ({ icon, nombreRoute, route, nombresRoutes, routes }: CBreadcrumbsProps) => {\r\n  return (\r\n    <div role=\"presentation\" onClick={handleClick} style={{ marginBottom: '15px' }}>\r\n      <Breadcrumbs aria-label=\"breadcrumb\">\r\n        <StyledBreadcrumb\r\n          component=\"a\"\r\n          href={route}\r\n          label={nombreRoute}\r\n          icon={icon} />\r\n        {routes.map((value, i) => {\r\n          return (\r\n            <>\r\n              <StyledBreadcrumb key={i} component=\"a\" href={value} label={nombresRoutes[i]} />\r\n            </>\r\n          )\r\n        })}\r\n\r\n      </Breadcrumbs>\r\n    </div>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport { AxiosRequest,AxiosResponse } from '../../Utils/Axios';\r\nimport { IResponseCard, IResponseHome, IResponseMedalla } from './Interfaces/IHome';\r\n//llamada a interceptor\r\nAxiosRequest();\r\nAxiosResponse();\r\nexport async function TarjetaService() {\r\n    return await axios.get<IResponseCard>(`${process.env.REACT_APP_API_COMISIONES}api/home/tarjeta`);\r\n}\r\nexport async function MedallaService() {\r\n    return await axios.get<IResponseMedalla>(`${process.env.REACT_APP_API_COMISIONES}api/home/rango`);\r\n}\r\nexport async function HomeService() {\r\n    AxiosResponse();\r\n    return await axios.get(`${process.env.REACT_APP_API_COMISIONES}api/home`);\r\n}","import { Card, CardContent, Paper, Typography } from '@mui/material'\r\nimport React from 'react'\r\nimport ReactApexChart from 'react-apexcharts';\r\nconst ChartDias = () => {\r\n    const series = [\r\n        {\r\n            name: \"Dia\",\r\n            data: [2500, 300, 0, 0, 555, 6542, 7222, 822, 559, 1660, 1661, 1256, 5513, 164, 15, 16, 17, 18, 19, 6620, 21, 22, 23, 2466, 25, 2644, 27, 28, 29, 360]\r\n        }\r\n    ];\r\n    const options = {\r\n        xaxis: {\r\n            categories: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]\r\n        }\r\n    };\r\n    return <ReactApexChart type='line' options={options} series={series} height={'280'} />;\r\n};\r\nexport const CChartDias = () => {\r\n    return (\r\n        <Card sx={{ minWidth: '100%' }}  >\r\n            <React.Fragment>\r\n                <CardContent style={{ minHeight: '400px' }}>\r\n                    <Typography variant=\"h5\" component=\"div\">\r\n                        Transcurso del mes\r\n                    </Typography>\r\n                    <ChartDias />\r\n                </CardContent>\r\n            </React.Fragment>\r\n        </Card>\r\n    )\r\n}\r\n","import { Button, Card, CardActions, CardContent, CardMedia, Typography } from '@mui/material'\r\nimport React from 'react'\r\n\r\nexport const CPremios = () => {\r\n    return (\r\n        <Card sx={{ minWidth: '100%' }}  >\r\n            <React.Fragment>\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    alt=\"green iguana\"\r\n                    height=\"240\"\r\n                    image=\"https://atommn.s3.amazonaws.com/premios/01.png\"\r\n                />\r\n                <CardContent >\r\n                    <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                        Participa y gana premios \r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit. Impedit obcaecati sequi exercitati\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit. Impedit obcaecati sequi exercitati\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button size=\"small\">Leer mas ...</Button>\r\n                </CardActions>\r\n            </React.Fragment>\r\n        </Card>\r\n    )\r\n}\r\n","import { Box, Card, CardActionArea, CardContent, Grid, Typography } from \"@mui/material\";\r\nimport { Link } from 'react-router-dom'\r\nimport GroupsIcon from '@mui/icons-material/Groups';\r\ntype JSXComponent = () => JSX.Element;\r\ninterface CCardResumenProps {\r\n    color: string,\r\n    monto: string\r\n    descripcion: string;\r\n    icon: React.ReactNode;\r\n    route:string;\r\n}\r\n\r\nconst CCardResumen = ({ color, descripcion, monto, icon, route }: CCardResumenProps) => {\r\n    return (\r\n        <Grid container item sm={3} sx={{ p: 1 }}>\r\n            <Grid container item lg={12} style={{ marginBottom: 0 }} >\r\n                <Card sx={{ minWidth: '100%' }} style={{ background: color }} onMouseEnter={() => console.log(\"efecto hover\")}>\r\n                    <CardActionArea component={Link} to={route}>\r\n                        <CardContent sx={{ display: 'flex' }} style={{ padding: 0 }}>\r\n                            {icon}\r\n                            <Box style={{ width: '100%' }}>\r\n                                <CardContent>\r\n                                    <Typography variant=\"h5\" style={{ margin: 0, textAlign: 'center', fontWeight: 'bold', color: \"white\" }}>{monto}</Typography>\r\n                                    <Typography variant=\"body1\" style={{ margin: 0, textAlign: 'center', color: \"white\" }}>{descripcion}</Typography>\r\n                                </CardContent>\r\n                            </Box>\r\n                        </CardContent>\r\n                    </CardActionArea >\r\n                </Card>\r\n            </Grid>\r\n        </Grid >\r\n    );\r\n}\r\n\r\nexport default CCardResumen;","import GroupsIcon from '@mui/icons-material/Groups';\r\nimport AttachMoneyIcon from '@mui/icons-material/AttachMoney';\r\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\r\nimport AccountTreeIcon from '@mui/icons-material/AccountTree';\r\ninterface cardConfig {\r\n    icon: React.ReactNode;\r\n    color: string\r\n}\r\nexport function Config(posicion: number) {\r\n    let config: cardConfig;\r\n    switch (posicion) {\r\n        case 0:\r\n            config = {\r\n                color: \"linear-gradient(to right bottom, #0E0E0E, #939393)\",\r\n                icon: (<GroupsIcon style={{ fontSize: '5rem', color: 'white', margin: '10px' }} />)\r\n            }\r\n            break;\r\n        case 1:\r\n            config = {\r\n                color: \"linear-gradient(to right bottom, #FF0000, #FF7C7C)\",\r\n                icon: (<AttachMoneyIcon style={{ fontSize: '5rem', color: 'white', margin: '10px' }} />)\r\n            }\r\n            break;\r\n        case 2:\r\n            config = {\r\n                color: \"linear-gradient(to right bottom, #0008FF, #9295FF)\",\r\n                icon: (<TrendingUpIcon style={{ fontSize: '5rem', color: 'white', margin: '10px' }} />)\r\n            }\r\n            break;\r\n        case 3:\r\n            config = {\r\n                color: \"linear-gradient(to right bottom, #00581C, #61DA87)\",\r\n                icon: (<AccountTreeIcon style={{ fontSize: '5rem', color: 'white', margin: '10px' }} />)\r\n            }\r\n            break;\r\n        default:\r\n            //por default\r\n            config = {\r\n                color: \"linear-gradient(to right bottom, #FF0000, #FF7C7C)\",\r\n                icon: (<AttachMoneyIcon style={{ fontSize: '5rem', color: 'white', margin: '10px' }} />)\r\n            }\r\n            break;\r\n    }\r\n    return config\r\n}","import { Grid, Skeleton, Stack } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { TarjetaService } from \"../../../Services/Comisiones/Home\";\r\nimport { ICCard } from \"../../../Services/Comisiones/Interfaces/IHome\";\r\nimport CCardResumen from \"./CCardResumen/CCardResumen\";\r\nimport { Config } from \"./CCardResumen/Config\";\r\n\r\ninterface Extra {\r\n    uno: string;\r\n    dos: string;\r\n    tres: string;\r\n}\r\nconst initialFake: Extra = {\r\n    uno: \"11\",\r\n    dos: \"22\",\r\n    tres: \"55\",\r\n}\r\n\r\n\r\ninterface ListCCardProps {\r\n\r\n}\r\nconst initialState: ICCard[] = [];\r\nconst LoadCard = () => {\r\n    const loadInicial=[0,1,2,3]\r\n    return (\r\n        <>\r\n            {\r\n                loadInicial.map((initial, i) => (\r\n                    <Grid container item sm={3} sx={{ p: 1 }} key={i} >\r\n                        <Grid container item lg={12} style={{ marginBottom: 25 }} >\r\n                            <Stack spacing={1} sx={{ minWidth: '100%' }} style={{ alignItems: \"center\" }} >\r\n                                <Skeleton variant=\"rounded\" sx={{ width: '100%' }} height={90} />\r\n                            </Stack>\r\n                        </Grid>\r\n                    </Grid>\r\n                ))\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nconst ListCCard = (props: ListCCardProps) => {\r\n    const [tarjetas, setTarjetas] = useState<ICCard[]>([]);\r\n    const [carga, setCarga] = useState(true);\r\n    const getTarjetas = async () => {\r\n        try {\r\n            const { data } = await TarjetaService();\r\n            if (data.status == 1) {\r\n                console.log(data.data)\r\n                setTarjetas(data.data);\r\n                setCarga(false);\r\n            }\r\n            else {\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            setCarga(false);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getTarjetas();\r\n\r\n    }, []);\r\n    return (\r\n        carga ? (<LoadCard />) : (\r\n            <>\r\n                {tarjetas.map((tarjeta, i) => {\r\n                    return (<CCardResumen key={i} icon={Config(i).icon} color={Config(i).color} descripcion={tarjeta.titulo} monto={tarjeta.valor} route=\"/mi-red\" />)\r\n                })}\r\n            </>\r\n        )\r\n    );\r\n}\r\n\r\n\r\nexport default ListCCard;","\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Button, Card, CardActions, CardContent, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\ninterface CCirculoChartProps {\r\n    options?: any;\r\n    series?: any;\r\n}\r\nconst CirculoChart = () => {\r\n    const series = [70]\r\n    const options = {\r\n        labels: [\"Progress\"],\r\n    };\r\n\r\n    return <ReactApexChart type='radialBar' options={options} series={series} height={'220'} />;\r\n};\r\nexport const CCirculoChart = () => {\r\n    return (\r\n        <Card sx={{ minWidth: '100%' }} >\r\n            <React.Fragment>\r\n                <CardContent style={{ minHeight: '265px' }}>\r\n                    <Typography variant=\"h5\" component=\"div\" align=\"center\">\r\n                        Proximo nivel\r\n                    </Typography>\r\n                    <div style={{ textAlign: 'center', alignContent: 'center', justifyContent: 'center' }}>\r\n                        <CirculoChart />\r\n                    </div>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button size=\"small\">Leer mas ...</Button>\r\n                </CardActions>\r\n            </React.Fragment>\r\n        </Card>\r\n\r\n    )\r\n}\r\n","import { Box, Button, Card, CardActions, CardContent, Typography } from '@mui/material'\r\nimport React from 'react'\r\n\r\nexport const CNotificacion = () => {\r\n    return (\r\n        <Card sx={{ minWidth: '100%' }}  >\r\n            <React.Fragment>\r\n                <CardContent style={{ minHeight: '265px' }}>\r\n                    <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n                        vienes 2, enero 2023\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" component=\"div\">\r\n                        Notificacion de prueba\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                        Esta es una notificacion de prueba\r\n                        <br />\r\n                        aplicando datos quemados\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button size=\"small\">Leer mas ...</Button>\r\n                </CardActions>\r\n            </React.Fragment>\r\n        </Card>\r\n    )\r\n}\r\n","import { Box, Card, CardContent, CardMedia, Typography } from '@mui/material'\r\nimport React from 'react'\r\n\r\nexport const CRangoActual = () => {\r\n    return (\r\n        <Card sx={{ minWidth: '100%' }}>\r\n            <React.Fragment>\r\n                <CardContent  >\r\n                    <Box alignItems=\"center\" >\r\n                        <Typography component=\"div\" variant=\"h5\" align=\"center\">\r\n                            Rango\r\n                        </Typography>\r\n                        <div style={{ justifyContent: \"center\", display: \"flex\", padding: '15px' }} >\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                sx={{ width: 150, alignItems: \"center\" }}\r\n                                image={`${process.env.REACT_APP_API_COMISIONES}assest/achievments/national_ambassador.png`}\r\n                                alt=\"Live from space album cover\"\r\n                            />\r\n                        </div>\r\n                        <Typography component=\"div\" variant=\"h6\" align=\"center\">\r\n                            poission o punto s\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle1\" color=\"text.secondary\" component=\"div\" align=\"center\">\r\n                            66599\r\n                        </Typography>\r\n                    </Box>\r\n                </CardContent>\r\n            </React.Fragment>\r\n        </Card>\r\n    )\r\n}\r\n","import { Card, CardContent, Grid, Skeleton, Stack } from '@mui/material';\r\nimport { useEffect, useState } from 'react';\r\nimport { MedallaService } from \"../../../Services/Comisiones/Home\";\r\nimport { CCirculoChart } from './CirculoChart/CCirculoChart';\r\nimport { CNotificacion } from './CNotificaciones/CNotificacion';\r\nimport { CRangoActual } from './CRangoActual/CRangoActual';\r\ninterface MCardProps {\r\n    nombre: string;\r\n    descripcion: string;\r\n}\r\nconst LoadSection = () => {\r\n    return (\r\n        <>\r\n            <Grid container item sm={4} sx={{ p: 1 }}  >\r\n                <Grid container item lg={12} style={{ marginBottom: 25 }} >\r\n                    <Stack spacing={1} sx={{ minWidth: '100%' }} style={{ alignItems: \"center\" }} >\r\n                        <Skeleton variant=\"rounded\" sx={{ width: '100%' }} height={350} />\r\n                    </Stack>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container item sm={4} sx={{ p: 1 }}  >\r\n                <Grid container item lg={12} style={{ marginBottom: 25 }} >\r\n                    <Stack spacing={1} sx={{ minWidth: '100%' }} style={{ alignItems: \"center\" }} >\r\n                        <Skeleton variant=\"rounded\" sx={{ width: '100%' }} height={350} />\r\n                    </Stack>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container item sm={4} sx={{ p: 1 }}  >\r\n                <Grid container item lg={12} style={{ marginBottom: 25 }} >\r\n                    <Stack spacing={1} sx={{ minWidth: '100%' }} style={{ alignItems: \"center\" }} >\r\n                        <Skeleton variant=\"rounded\" sx={{ width: '100%' }} height={350} />\r\n                    </Stack>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nconst MCard = () => {\r\n    const [carga, setCarga] = useState(true);\r\n    const getTarjetas = async () => {\r\n        try {\r\n            const { data } = await MedallaService();\r\n            if (data.status == 1) {\r\n                \r\n                setCarga(false);\r\n            }\r\n            else {\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getTarjetas();\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                carga ? (<LoadSection />) :\r\n                    (\r\n                        <>\r\n                            <Grid container item sm={4} sx={{ p: 1 }}  >\r\n                                <Grid container item lg={12} style={{ marginBottom: 25 }} >\r\n                                    <CNotificacion />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container item sm={4} sx={{ p: 1 }}  >\r\n                                <Grid container item lg={12} style={{ marginBottom: 25 }} >\r\n                                    <CRangoActual />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container item sm={4} sx={{ p: 1 }}  >\r\n                                <Grid container item lg={12} style={{ marginBottom: 25 }} >\r\n                                    <CCirculoChart />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </>\r\n                    )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MCard;","import { Card, CardContent, Chip, Grid, Typography } from '@mui/material';\r\nimport { AxiosError } from 'axios';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { CBreadcrumbs } from '../../Components/CBreadcrumbs';\r\nimport { setToken } from '../../Reducers/Slices/LoginSlice';\r\nimport { HomeService } from '../../Services/Comisiones/Home';\r\nimport { CChartDias } from './Components/CChartDias/CChartDias';\r\nimport DashboardIcon from '@mui/icons-material/Dashboard';\r\nimport { CPremios } from './Components/CPremios/CPremios';\r\nimport ListCCard from './Components/ListCCard';\r\nimport MCard from './Components/MCard';\r\nimport { ResponseHome, Data, Card as tajeta, Medal } from './Interfaces/Home';\r\n\r\nconst Home = () => {\r\n    const nagivate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const updateToken = (token: boolean) => {\r\n        dispatch(\r\n            setToken({\r\n                token: token\r\n            })\r\n        )\r\n    }\r\n    /*Tarjeta */\r\n    const [cards, setCard] = useState<tajeta[]>(\r\n        [{\r\n            nombre: '',\r\n            personas: '',\r\n            total: '',\r\n            totalPersonas: '',\r\n        }]\r\n    );\r\n    /*Medallas */\r\n    const [medals, setMedal] = useState<Medal[]>(\r\n        [{\r\n            nombre: '',\r\n            descripcion: ''\r\n        }]\r\n    );\r\n    const homeApi = async () => {\r\n\r\n        try {\r\n            let response: ResponseHome = {\r\n                data: {\r\n                    cards: [\r\n                        {\r\n                            nombre: 'demo',\r\n                            personas: '25551',\r\n                            total: '2500',\r\n                            totalPersonas: '500'\r\n                        },\r\n                        {\r\n                            nombre: 'demo 1',\r\n                            personas: '25551',\r\n                            total: '2500',\r\n                            totalPersonas: '500'\r\n                        },\r\n                        {\r\n                            nombre: 'demo 2',\r\n                            personas: '25551',\r\n                            total: '2500',\r\n                            totalPersonas: '500'\r\n                        }\r\n                    ],\r\n                    medals: [\r\n                        {\r\n                            nombre: 'uno',\r\n                            descripcion: '25551'\r\n                        },\r\n                        {\r\n                            nombre: 'dos',\r\n                            descripcion: '25551'\r\n                        }\r\n                    ]\r\n                },\r\n                status: 1,\r\n                message: \"demo\"\r\n            }\r\n            try {\r\n                const { data, headers, } = await HomeService()\r\n                setCard((cards) => (response.data.cards));\r\n                setMedal((medal) => (response.data.medals));\r\n            } catch (error) {\r\n                const err = error as AxiosError;\r\n                if (err.response?.status == 401) {\r\n                    updateToken(false);\r\n                    nagivate(\"/login\");\r\n                }\r\n                else {\r\n                    console.log('salida forzoza')\r\n                    updateToken(false);\r\n                    nagivate(\"/en-mantenimiento\");\r\n                }\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        homeApi()\r\n        return () => {\r\n            console.log('a la salida')\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <CBreadcrumbs icon={<DashboardIcon />} nombreRoute={\"Tablero\"} route={\"/inicio\"} nombresRoutes={[]} routes={[]}></CBreadcrumbs>\r\n            <Typography variant=\"h5\" component=\"h2\" sx={{ pl: 1, pr: 1 }}>\r\n                Bienvenido\r\n            </Typography>\r\n            <Grid container item xs={12} alignItems=\"center\" justifyContent=\"center\">\r\n                <ListCCard />\r\n            </Grid>\r\n            <Grid container item xs={12} alignItems=\"center\" justifyContent=\"center\">\r\n                <MCard />\r\n            </Grid>\r\n            <Grid container item xs={12} alignItems=\"center\" justifyContent=\"center\">\r\n                <Grid container item sm={6} sx={{ p: 1 }}  >\r\n                    <Grid container item lg={12} style={{ marginBottom: 25 }} >\r\n                        <CChartDias />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container item sm={6} sx={{ p: 1 }}  >\r\n                    <Grid container item lg={12} style={{ marginBottom: 25 }} >\r\n                        <CPremios />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;"],"names":["StyledBreadcrumb","styled","Chip","theme","backgroundColor","palette","mode","grey","height","spacing","color","text","primary","fontWeight","typography","fontWeightRegular","emphasize","boxShadow","shadows","handleClick","event","preventDefault","console","info","CBreadcrumbs","icon","nombreRoute","route","nombresRoutes","routes","role","onClick","style","marginBottom","component","href","label","map","value","i","TarjetaService","axios","process","MedallaService","HomeService","AxiosResponse","AxiosRequest","ChartDias","type","options","xaxis","categories","series","name","data","CChartDias","Card","sx","minWidth","CardContent","minHeight","Typography","variant","CPremios","CardMedia","alt","image","gutterBottom","CardActions","Button","size","descripcion","monto","Grid","container","item","sm","p","lg","background","onMouseEnter","log","CardActionArea","Link","to","display","padding","Box","width","margin","textAlign","Config","posicion","config","Groups","fontSize","AttachMoney","TrendingUp","AccountTree","LoadCard","initial","Stack","alignItems","Skeleton","props","useState","tarjetas","setTarjetas","carga","setCarga","getTarjetas","status","useEffect","tarjeta","titulo","valor","CirculoChart","labels","CCirculoChart","align","alignContent","justifyContent","CNotificacion","CRangoActual","LoadSection","nagivate","useNavigate","dispatch","useDispatch","updateToken","token","setToken","nombre","personas","total","totalPersonas","setCard","setMedal","homeApi","response","cards","medals","message","headers","medal","err","Dashboard","pl","pr","xs"],"sourceRoot":""}